name: Deploy OSRM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install dependencies on server
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git libboost-all-dev libprotobuf-dev protobuf-compiler libosmpbf-dev libstxxl-dev libstxxl1v5 libxml2-dev libsparsehash-dev libbz2-dev zlib1g-dev liblua5.2-dev libtbb-dev
        EOF

    - name: Clone OSRM repository on server
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
        git clone https://github.com/Project-OSRM/osrm-backend.git
        cd osrm-backend
        mkdir -p build
        cd build
        cmake ..
        cmake --build .
        EOF

    - name: Download and process PBF file on server
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
        wget http://download.geofabrik.de/europe/germany/berlin-latest.osm.pbf
        ./osrm-backend/build/osrm-extract berlin-latest.osm.pbf -p osrm-backend/profiles/car.lua
        ./osrm-backend/build/osrm-contract berlin-latest.osrm
        EOF

    - name: Start OSRM server on remote
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
        nohup ./osrm-backend/build/osrm-routed --algorithm mld berlin-latest.osrm &
        EOF
